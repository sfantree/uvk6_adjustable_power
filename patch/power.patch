diff -Nuar uv-k5-firmware-custom-0.13.2/Makefile uv-k5-firmware-custom-0.13.2-mod/Makefile
--- uv-k5-firmware-custom-0.13.2/Makefile	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/Makefile	2025-08-21 09:09:50.702358645 +0000
@@ -20,10 +20,10 @@
 ENABLE_TX1750                 ?= 0
 ENABLE_PWRON_PASSWORD         ?= 0
 ENABLE_DTMF_CALLING           ?= 1
-ENABLE_FLASHLIGHT             ?= 1
+ENABLE_FLASHLIGHT             ?= 0
 ENABLE_BOOTLOADER			 ?= 0
 # ---- CUSTOM MODS ----
-ENABLE_BIG_FREQ               ?= 1
+ENABLE_BIG_FREQ               ?= 0
 ENABLE_KEEP_MEM_NAME          ?= 1
 ENABLE_WIDE_RX                ?= 1
 ENABLE_TX_WHEN_AM             ?= 0
@@ -55,6 +55,9 @@
 ENABLE_ENGLISH				    =0
 ENABLE_DOCK 		          ?= 0
 ENABLE_CUSTOM_SIDEFUNCTIONS   ?= 1
+
+ENABLE_CUSTOM_POWER           ?= 1
+
 ENABLE_SIDEFUNCTIONS_SEND     ?= 1
 ENABLE_BLOCK                  ?= 0
 ENABLE_PINYIN 				   =0
@@ -418,6 +421,10 @@
 endif
 #endif
 
+ifeq ($(ENABLE_CUSTOM_POWER),1)
+    CFLAGS  += -DENABLE_CUSTOM_POWER
+endif
+
 ifeq ($(ENABLE_TIMER),1)
     CFLAGS  += -DENABLE_TIMER
 endif
diff -Nuar uv-k5-firmware-custom-0.13.2/app/menu.c uv-k5-firmware-custom-0.13.2-mod/app/menu.c
--- uv-k5-firmware-custom-0.13.2/app/menu.c	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/app/menu.c	2025-08-21 09:08:26.882178008 +0000
@@ -168,7 +168,15 @@
 
 int MENU_GetLimits(uint8_t menu_id, int32_t *pMin, int32_t *pMax) {
     switch (menu_id) {
-        case MENU_SQL:
+ #ifdef ENABLE_CUSTOM_POWER
+         case MENU_CUSTOM_POWER:
+           *pMin = 0;
+           //*pMax = 9;
+           *pMax = 54;
+           break; 
+#endif
+
+   case MENU_SQL:
             *pMin = 0;
             *pMax = 9;
             break;
@@ -469,7 +477,16 @@
         default:
             return;
 
-        case MENU_SQL:
+#ifdef ENABLE_CUSTOM_POWER
+       case MENU_CUSTOM_POWER:
+            gEeprom.CUSTOM_POWER_FACTOR = gSubMenuSelection;
+            //gVfoConfigureMode = VFO_CONFIGURE;
+            gVfoConfigureMode = VFO_CONFIGURE_RELOAD;
+            //gFlagResetVfos = true;
+            break;
+#endif
+
+       case MENU_SQL:
             gEeprom.SQUELCH_LEVEL = gSubMenuSelection;
             gVfoConfigureMode = VFO_CONFIGURE;
             break;
@@ -914,7 +931,14 @@
 
 void MENU_ShowCurrentSetting(void) {
     switch (UI_MENU_GetCurrentMenuId()) {
-        case MENU_SQL:
+
+#ifdef ENABLE_CUSTOM_POWER
+       case MENU_CUSTOM_POWER:
+            gSubMenuSelection = gEeprom.CUSTOM_POWER_FACTOR;
+            break;
+#endif
+
+   case MENU_SQL:
             gSubMenuSelection = gEeprom.SQUELCH_LEVEL;
             break;
 
diff -Nuar uv-k5-firmware-custom-0.13.2/chinese.h uv-k5-firmware-custom-0.13.2-mod/chinese.h
--- uv-k5-firmware-custom-0.13.2/chinese.h	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/chinese.h	2025-08-21 09:13:19.430811605 +0000
@@ -151,8 +151,16 @@
 #define 副信道发射 "DUAL SEND"
 #define 开机显示 "POnMsg"
 
+#ifdef ENABLE_CUSTOM_POWER
+#define 自定功率 "QRP Pwr"
+#endif
 
 #else
+
+#ifdef ENABLE_CUSTOM_POWER
+#define 自定功率 "\x95\xE5\xDF\x04"
+#endif
+
 #define 步进频率  "\x01\x02\x03\x04"
 #define 接收数字亚音  "\x05\x06\x07\x08\x09\x0B"
 #define 接收模拟亚音  "\x05\x06\x0C\x0D\x09\x0B"
@@ -306,6 +314,11 @@
 
 
 #elif ENABLE_CHINESE_FULL==4
+
+#ifdef ENABLE_CUSTOM_POWER
+#define 自定功率 "\xD7\xD4\xB6\xA8\xB9\xA6\xC2\xCA"
+#endif
+
 #define 步进频率 "\xB2\xBD\xBD\xF8\xC6\xB5\xC2\xCA"
 #define 接收数字亚音 "\xBD\xD3\xCA\xD5\xCA\xFD\xD7\xD6\xD1\xC7\xD2\xF4"
 #define 接收模拟亚音 "\xBD\xD3\xCA\xD5\xC4\xA3\xC4\xE2\xD1\xC7\xD2\xF4"
diff -Nuar uv-k5-firmware-custom-0.13.2/misc.c uv-k5-firmware-custom-0.13.2-mod/misc.c
--- uv-k5-firmware-custom-0.13.2/misc.c	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/misc.c	2025-08-21 09:19:20.419600242 +0000
@@ -246,6 +246,11 @@
 
 volatile uint8_t boot_counter_10ms;
 
+#ifdef ENABLE_CUSTOM_POWER
+    uint8_t gTxp0 = 0;
+    //uint8_t gTxp1 = 0;
+    //uint8_t gTxp2 = 0;
+#endif
 
 uint8_t gIsLocked = 0xFF;
 
@@ -272,4 +277,4 @@
         ul = ul * 10 + (uint8_t) (c - '0');
     }
     return ul;
-}
\ No newline at end of file
+}
diff -Nuar uv-k5-firmware-custom-0.13.2/misc.h uv-k5-firmware-custom-0.13.2-mod/misc.h
--- uv-k5-firmware-custom-0.13.2/misc.h	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/misc.h	2025-08-21 09:19:52.999671363 +0000
@@ -332,5 +332,10 @@
 void FUNCTION_NOP();
 inline bool SerialConfigInProgress() { return gSerialConfigCountDown_500ms != 0; }
 
+#ifdef ENABLE_CUSTOM_POWER
+    extern uint8_t gTxp0;
+    //extern uint8_t gTxp1;
+    //extern uint8_t gTxp2;
+#endif
 
 #endif
diff -Nuar uv-k5-firmware-custom-0.13.2/radio.c uv-k5-firmware-custom-0.13.2-mod/radio.c
--- uv-k5-firmware-custom-0.13.2/radio.c	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/radio.c	2025-08-21 09:21:11.619842957 +0000
@@ -494,6 +494,7 @@
     EEPROM_ReadBuffer(0x1ED0 + (Band * 16) + (pInfo->OUTPUT_POWER * 3), Txp, 3);
 
 
+#if 0
 #ifdef ENABLE_REDUCE_LOW_MID_TX_POWER
     // make low and mid even lower
     if (pInfo->OUTPUT_POWER == OUTPUT_POWER_LOW) {
@@ -507,6 +508,92 @@
         Txp[2] /= 3;
     }
 #endif
+#endif
+
+#if 0
+#ifdef ENABLE_CUSTOM_POWER
+#if 0
+    uint8_t factor = gEeprom.CUSTOM_POWER_FACTOR;
+    if(factor >= 1 && factor <= 9) {
+        if (pInfo->OUTPUT_POWER == OUTPUT_POWER_LOW) {
+            Txp[0] = Txp[0] / (3 * 9) * (10 - factor);
+            Txp[1] = Txp[1] / (3 * 9) * (10 - factor);
+            Txp[2] = Txp[2] / (3 * 9) * (10 - factor);
+        }
+        else if (pInfo->OUTPUT_POWER == OUTPUT_POWER_MID){
+            Txp[0] = Txp[0] / (2 * 9) * (10 - factor);
+            Txp[1] = Txp[1] / (2 * 9) * (10 - factor);
+            Txp[2] = Txp[2] / (2 * 9) * (10 - factor);
+        } else {
+            Txp[0] = Txp[0] / (1 * 9) * (10 - factor);
+            Txp[1] = Txp[1] / (1 * 9) * (10 - factor);
+            Txp[2] = Txp[2] / (1 * 9) * (10 - factor);
+        }
+    }
+#endif
+    Txp[0] = 255;
+    Txp[1] = 255;
+    Txp[2] = 255;
+    gTxp0 = Txp[0];
+    //gTxp1 = Txp[1];
+    //gTxp2 = Txp[2];
+#endif
+#endif    
+
+#if 0
+#ifdef ENABLE_CUSTOM_POWER
+    uint8_t factor = gEeprom.CUSTOM_POWER_FACTOR;
+    if(factor >= 1 && factor <= 9) {
+        uint8_t factor_min = 40;
+        //uint8_t factor_max = 140;
+        uint8_t step = 4;
+        if (pInfo->OUTPUT_POWER == OUTPUT_POWER_LOW) {
+            Txp[0] = factor_min + 3 * step * (9 - factor);
+            Txp[1] = factor_min + 3 * step * (9 - factor);
+            Txp[2] = factor_min + 3 * step * (9 - factor);
+        }
+        else if (pInfo->OUTPUT_POWER == OUTPUT_POWER_MID){
+            Txp[0] = factor_min + 3 * step * (9 - factor) + step;
+            Txp[1] = factor_min + 3 * step * (9 - factor) + step;
+            Txp[2] = factor_min + 3 * step * (9 - factor) + step;
+        } else {
+            Txp[0] = factor_min + 3 * step * (9 - factor) + 2 * step;
+            Txp[1] = factor_min + 3 * step * (9 - factor) + 2 * step;
+            Txp[2] = factor_min + 3 * step * (9 - factor) + 2 * step;
+        }
+    }
+    gTxp0 = Txp[0];
+    //gTxp1 = Txp[1];
+    //gTxp2 = Txp[2];
+#endif
+#endif
+
+#ifdef ENABLE_CUSTOM_POWER
+    uint8_t factor = gEeprom.CUSTOM_POWER_FACTOR;
+    //if(factor >= 1 && factor <= 9) {
+    if(factor >= 1 && factor <= 54) {
+        uint8_t txp_min = 0;
+        uint8_t factor_max = 54;
+        uint8_t step = 1;
+        if (pInfo->OUTPUT_POWER == OUTPUT_POWER_LOW) {
+            Txp[0] = txp_min + 3 * step * (factor_max - factor);
+            Txp[1] = txp_min + 3 * step * (factor_max - factor);
+            Txp[2] = txp_min + 3 * step * (factor_max - factor);
+        }
+        else if (pInfo->OUTPUT_POWER == OUTPUT_POWER_MID){
+            Txp[0] = txp_min + 3 * step * (factor_max - factor) + step;
+            Txp[1] = txp_min + 3 * step * (factor_max - factor) + step;
+            Txp[2] = txp_min + 3 * step * (factor_max - factor) + step;
+        } else {
+            Txp[0] = txp_min + 3 * step * (factor_max - factor) + 2 * step;
+            Txp[1] = txp_min + 3 * step * (factor_max - factor) + 2 * step;
+            Txp[2] = txp_min + 3 * step * (factor_max - factor) + 2 * step;
+        }
+    }
+    gTxp0 = Txp[0];
+    //gTxp1 = Txp[1];
+    //gTxp2 = Txp[2];
+#endif
 
     pInfo->TXP_CalculatedSetting = FREQUENCY_CalculateOutputPower(
             Txp[0],
diff -Nuar uv-k5-firmware-custom-0.13.2/settings.c uv-k5-firmware-custom-0.13.2-mod/settings.c
--- uv-k5-firmware-custom-0.13.2/settings.c	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/settings.c	2025-08-21 09:05:54.625849796 +0000
@@ -564,11 +564,15 @@
     State[2] = gEeprom.KEY_1_LONG_PRESS_ACTION;
     State[3] = gEeprom.KEY_2_SHORT_PRESS_ACTION;
     State[4] = gEeprom.KEY_2_LONG_PRESS_ACTION;
-    State[5] = 0;
+#endif
+#ifdef ENABLE_CUSTOM_POWER
+    State[5] = gEeprom.CUSTOM_POWER_FACTOR;
+#else
+    State[5] = 0
+#endif
     State[6] = 0;
     State[7] = 0;
     EEPROM_WriteBuffer(0x1FF8, State, 5);
-#endif
 
     memset(Password, 0xFF, sizeof(Password));
 #ifdef ENABLE_PWRON_PASSWORD
@@ -814,4 +818,4 @@
 #endif
             ;
     EEPROM_WriteBuffer(0x1FF0, buf,8);
-}
\ No newline at end of file
+}
diff -Nuar uv-k5-firmware-custom-0.13.2/settings.h uv-k5-firmware-custom-0.13.2-mod/settings.h
--- uv-k5-firmware-custom-0.13.2/settings.h	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/settings.h	2025-08-21 09:05:54.625849796 +0000
@@ -206,6 +206,9 @@
     uint8_t               KEY_2_SHORT_PRESS_ACTION;
     uint8_t               KEY_2_LONG_PRESS_ACTION;
 #endif
+#ifdef ENABLE_CUSTOM_POWER
+    uint8_t               CUSTOM_POWER_FACTOR;
+#endif
     uint8_t               MIC_SENSITIVITY;
     uint8_t               MIC_SENSITIVITY_TUNING;
     uint8_t               CHAN_1_CALL;
@@ -291,4 +294,4 @@
 void SETTINGS_WriteBuildOptions(void);
 extern int               key_dir;
 
-#endif
\ No newline at end of file
+#endif
diff -Nuar uv-k5-firmware-custom-0.13.2/ui/menu.c uv-k5-firmware-custom-0.13.2-mod/ui/menu.c
--- uv-k5-firmware-custom-0.13.2/ui/menu.c	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/ui/menu.c	2025-08-21 09:30:53.757107021 +0000
@@ -98,6 +98,10 @@
                 {/*"M Long",*/ VOICE_ID_INVALID,                       MENU_MLONG         ,M键长按},
 #endif
 
+#ifdef ENABLE_CUSTOM_POWER
+                {/*"QRP Pwr",*/ VOICE_ID_INVALID, MENU_CUSTOM_POWER, 自定功率},
+#endif
+
 #ifdef ENABLE_DTMF_CALLING
 
                 {/*"ANI ID",*/ VOICE_ID_ANI_CODE,                      MENU_ANI_ID        ,DTMF_ID},
@@ -697,6 +701,13 @@
 
     BACKLIGHT_TurnOn();
     switch (UI_MENU_GetCurrentMenuId()) {
+#ifdef ENABLE_CUSTOM_POWER
+        case MENU_CUSTOM_POWER:
+           //sprintf(String, "%d", gSubMenuSelection);
+           //sprintf(String, "%d,%d,%d,%d", gSubMenuSelection, gTxp0, gTxp1, gTxp2);
+           sprintf(String, "factor:%d\ntxp:%d", gSubMenuSelection, gTxp0); 
+           break;
+#endif
         case MENU_SQL:
             sprintf(String, "%d", gSubMenuSelection);
             break;
@@ -1700,4 +1711,4 @@
 
 }
 
-#endif
\ No newline at end of file
+#endif
diff -Nuar uv-k5-firmware-custom-0.13.2/ui/menu.h uv-k5-firmware-custom-0.13.2-mod/ui/menu.h
--- uv-k5-firmware-custom-0.13.2/ui/menu.h	2024-09-21 07:16:05.000000000 +0000
+++ uv-k5-firmware-custom-0.13.2-mod/ui/menu.h	2025-08-21 09:05:54.625849796 +0000
@@ -145,6 +145,9 @@
     MENU_F2LONG,
     MENU_MLONG,
 #endif
+#ifdef ENABLE_CUSTOM_POWER
+    MENU_CUSTOM_POWER,
+#endif
     MENU_BATTYP
 };
 

